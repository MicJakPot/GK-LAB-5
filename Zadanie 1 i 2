<!DOCTYPE html>
<html lang="pl">
<head>
<meta charset="UTF-8">
<title>OpenGL - Michał Potocki</title>
<script src="glsim.js"></script>
<script>
let rotateX = 0;
let rotateY = 0;
let rotateZ = 0;
let objectNumber = 1; // Domyślnie wybrany obiekt 1 (korkociąg)
const N = 13; // liczba obrotów dla korkociągu i liczba boków podstawy piramidy

function drawHelix() {
    glColor3f(0.0, 1.0, 0.0); // Zielony kolor
    glBegin(GL_POINTS);
    const turns = N * 6.28; // N obrotów (6.28 ~ 2*pi)
    const points = 500;
    for (let i = 0; i <= points; i++) {
        let t = i / points * turns;
        let x = 0.5 * Math.cos(t);
        let y = 0.5 * Math.sin(t);
        let z = i / points * 2 - 1; // rozciągnięcie wzdłuż osi Z
        glPointSize(2 + (i / points) * 5); // powiększanie punktów
        glVertex3f(x, y, z);
    }
    glEnd();
}

function drawTriangleFanBase() {
    glBegin(GL_TRIANGLE_FAN);
    glVertex3f(0, 0, 0); // środek podstawy
    for (let i = 0; i <= N; i++) {
        let angle = (i / N) * 2 * Math.PI;
        glVertex3f(Math.cos(angle), Math.sin(angle), 0);
    }
    glEnd();
}

function drawPyramid() {
    glColor3f(1.0, 0.5, 0.0); // Kolor podstawy
    drawTriangleFanBase();

    glColor3f(0.0, 0.5, 1.0); // Kolor ścianek
    glBegin(GL_TRIANGLE_FAN);
    glVertex3f(0, 0, 1); // wierzchołek piramidy
    for (let i = 0; i <= N; i++) {
        let angle = (i / N) * 2 * Math.PI;
        glVertex3f(Math.cos(angle), Math.sin(angle), 0);
    }
    glEnd();
}

function display() {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glLoadIdentity();
    glRotatef(rotateZ, 0, 0, 1);
    glRotatef(rotateY, 0, 1, 0);
    glRotatef(rotateX, 1, 0, 0);

    if (objectNumber === 1) {
        drawHelix();
    } else if (objectNumber === 2) {
        drawPyramid();
    }
}

function initGL() {
    glMatrixMode(GL_PROJECTION);
    glOrtho(-2, 2, -2, 2, -2, 2);
    glMatrixMode(GL_MODELVIEW);
    glEnable(GL_DEPTH_TEST);
    glEnable(GL_POINT_SMOOTH);
    glClearColor(0, 0, 0, 1);
}

function doKeyDown(evt) {
    let key = evt.keyCode;
    if (key == 49) // '1'
        objectNumber = 1;
    else if (key == 50) // '2'
        objectNumber = 2;
    else if (key == 37)
        rotateY -= 15;
    else if (key == 39)
        rotateY += 15;
    else if (key == 40)
        rotateX += 15;
    else if (key == 38)
        rotateX -= 15;
    else if (key == 33)
        rotateZ += 15;
    else if (key == 34)
        rotateZ -= 15;
    else if (key == 36)
        rotateX = rotateY = rotateZ = 0;
    display();
    if (key >= 33 && key <= 40) {
        evt.preventDefault();
    }
}

function init() {
    try {
        glsimUse("glcanvas");
    } catch (e) {
        document.getElementById("canvas-holder").innerHTML = "Blad: " + e;
        return;
    }
    document.onkeydown = doKeyDown;
    initGL();
    display();
}
</script>
</head>

<body onload="init()">
<h3>OpenGL - Michał Potocki</h3>
<p>Klawisze: 1 - Korkociąg, 2 - Piramida, Strzałki/PageUp/PageDown/Home - Obrót.</p>
<div id="canvas-holder">
<canvas id="glcanvas" width="600" height="600"></canvas>
</div>
</body>
</html>
